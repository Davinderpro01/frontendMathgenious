{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/estadisticas.service\";\nimport * as i2 from \"src/app/app.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction EstadisticasComponent_div_4_ul_4_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 8)(15, \"div\", 9);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 10);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const session_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Fecha: \", i0.ɵɵpipeBind1(3, 12, session_r7.date), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Total de preguntas respondidas: \", session_r7.totalQuestions, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Respuestas correctas: \", session_r7.correctAnswers, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Respuestas incorrectas: \", session_r7.incorrectAnswers, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Tiempo de pr\\u00E1ctica: \", session_r7.timePractice, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Promedio de puntaje: \", session_r7.averageScore.toFixed(2), \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", session_r7.correctAnswers / session_r7.totalQuestions * 100 + \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (session_r7.correctAnswers / session_r7.totalQuestions * 100).toFixed(2), \"% \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", 100 - session_r7.correctAnswers / session_r7.totalQuestions * 100 + \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (100 - session_r7.correctAnswers / session_r7.totalQuestions * 100).toFixed(2), \"% \");\n  }\n}\n\nfunction EstadisticasComponent_div_4_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, EstadisticasComponent_div_4_ul_4_li_1_Template, 19, 14, \"li\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.filteredSessions);\n  }\n}\n\nfunction EstadisticasComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"h3\");\n    i0.ɵɵtext(2, \"Historial de Sesiones\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function EstadisticasComponent_div_4_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.searchTerm = $event);\n    })(\"input\", function EstadisticasComponent_div_4_Template_input_input_3_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.filterSessions());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, EstadisticasComponent_div_4_ul_4_Template, 2, 1, \"ul\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.searchTerm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.estadisticas.sessionHistory);\n  }\n}\n\nfunction EstadisticasComponent_div_6_ul_3_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 8)(8, \"div\", 9);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 10);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const theme_r13 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Tema: \", theme_r13.theme, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Respuestas correctas: \", theme_r13.correctAnswers, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Respuestas incorrectas: \", theme_r13.incorrectAnswers, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", theme_r13.correctAnswers / (theme_r13.correctAnswers + theme_r13.incorrectAnswers) * 100 + \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (theme_r13.correctAnswers / (theme_r13.correctAnswers + theme_r13.incorrectAnswers) * 100).toFixed(2), \"% \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", 100 - theme_r13.correctAnswers / (theme_r13.correctAnswers + theme_r13.incorrectAnswers) * 100 + \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (100 - theme_r13.correctAnswers / (theme_r13.correctAnswers + theme_r13.incorrectAnswers) * 100).toFixed(2), \"% \");\n  }\n}\n\nfunction EstadisticasComponent_div_6_ul_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, EstadisticasComponent_div_6_ul_3_li_1_Template, 12, 9, \"li\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r11.estadisticas.themeProgress);\n  }\n}\n\nfunction EstadisticasComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"h3\");\n    i0.ɵɵtext(2, \"Progreso por Tema\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, EstadisticasComponent_div_6_ul_3_Template, 2, 1, \"ul\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.estadisticas.themeProgress);\n  }\n}\n\nfunction EstadisticasComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"h3\");\n    i0.ɵɵtext(2, \"Mejora en promedio de puntajes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\")(4, \"li\")(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"div\", 8)(8, \"div\", 9);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 10);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"Promedio de puntaje a lo largo del tiempo: \", ctx_r2.calculateAverageScoreOverTime().toFixed(2), \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r2.calculateAverageScoreOverTime() / 100 * 100 + \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.calculateAverageScoreOverTime().toFixed(2), \"% \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", 100 - ctx_r2.calculateAverageScoreOverTime() + \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (100 - ctx_r2.calculateAverageScoreOverTime()).toFixed(2), \"% \");\n  }\n}\n\nfunction EstadisticasComponent_div_10_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const theme_r15 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Tema: \", theme_r15.theme, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Porcentaje de respuestas correctas: \", theme_r15.percentage.toFixed(2), \"%\");\n  }\n}\n\nfunction EstadisticasComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"h3\");\n    i0.ɵɵtext(2, \"Tendencias de Temas\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, EstadisticasComponent_div_10_li_4_Template, 5, 2, \"li\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.calculateThemePerformance());\n  }\n}\n\nfunction EstadisticasComponent_div_12_ul_3_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const result_r19 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"Desde la sesi\\u00F3n del \", i0.ɵɵpipeBind1(3, 3, result_r19.firstSession.date), \" hasta la sesi\\u00F3n del \", i0.ɵɵpipeBind1(4, 5, result_r19.lastSession.date), \":\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Aumento del promedio: \", result_r19.percentageIncrease.toFixed(2), \"%\");\n  }\n}\n\nfunction EstadisticasComponent_div_12_ul_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, EstadisticasComponent_div_12_ul_3_li_1_Template, 7, 7, \"li\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r16.scoreIncreaseResults);\n  }\n}\n\nfunction EstadisticasComponent_div_12_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"No hay sesiones con un aumento del 10% o m\\u00E1s en el promedio.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EstadisticasComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"h3\");\n    i0.ɵɵtext(2, \"Comparaci\\u00F3n de Sesiones\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, EstadisticasComponent_div_12_ul_3_Template, 2, 1, \"ul\", 6);\n    i0.ɵɵtemplate(4, EstadisticasComponent_div_12_p_4_Template, 2, 0, \"p\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showScoreIncreaseResults);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.showScoreIncreaseResults);\n  }\n}\n\nexport let EstadisticasComponent = /*#__PURE__*/(() => {\n  class EstadisticasComponent {\n    constructor(estadisticasService, appComponent) {\n      this.estadisticasService = estadisticasService;\n      this.appComponent = appComponent;\n      this.estadisticas = {};\n      this.searchTerm = '';\n      this.filteredSessions = []; // Aquí almacenaremos las sesiones filtradas.\n\n      this.allSessions = [];\n      this.showScoreIncreaseResults = false;\n      this.scoreIncreaseResults = [];\n    }\n\n    ngOnInit() {\n      const userId = this.appComponent.getUserID();\n\n      if (userId !== null) {\n        this.estadisticasService.obtenerHistorialSesiones(userId).subscribe({\n          next: data => {\n            this.estadisticas = {\n              sessionHistory: [],\n              timeProgress: [],\n              achievements: [],\n              themeProgress: []\n            };\n            const sessionsByDate = {};\n            const themeProgress = {};\n            data.forEach(statistics => {\n              statistics.sessionHistory.forEach(session => {\n                const [year, month, day] = session.date.split('-');\n                const formattedDate = new Date(`${year}-${month}-${day}`).toLocaleDateString('en-US', {\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric'\n                });\n\n                if (!sessionsByDate[formattedDate]) {\n                  sessionsByDate[formattedDate] = {\n                    totalQuestions: 0,\n                    correctAnswers: 0,\n                    incorrectAnswers: 0,\n                    totalTimePractice: 0,\n                    totalScores: 0,\n                    count: 0\n                  };\n                }\n\n                sessionsByDate[formattedDate].totalQuestions += session.totalQuestions;\n                sessionsByDate[formattedDate].correctAnswers += session.correctAnswers;\n                sessionsByDate[formattedDate].incorrectAnswers += session.incorrectAnswers;\n                sessionsByDate[formattedDate].totalTimePractice += session.timePractice;\n                sessionsByDate[formattedDate].totalScores += session.averageScore;\n                sessionsByDate[formattedDate].count++;\n              });\n              statistics.themeProgress.forEach(theme => {\n                if (!themeProgress[theme.theme]) {\n                  themeProgress[theme.theme] = {\n                    correctAnswers: 0,\n                    incorrectAnswers: 0\n                  };\n                }\n\n                themeProgress[theme.theme].correctAnswers += theme.correctAnswers;\n                themeProgress[theme.theme].incorrectAnswers += theme.incorrectAnswers;\n              });\n              this.estadisticas.timeProgress.push(...statistics.timeProgress);\n              this.estadisticas.achievements.push(...statistics.achievements);\n            });\n\n            for (const date in sessionsByDate) {\n              const sessionData = sessionsByDate[date];\n              const averageScore = sessionData.correctAnswers / sessionData.totalQuestions * 100;\n              const timePractice = this.convertTime(sessionData.totalTimePractice);\n              this.estadisticas.sessionHistory.push({\n                date: date,\n                totalQuestions: sessionData.totalQuestions,\n                correctAnswers: sessionData.correctAnswers,\n                incorrectAnswers: sessionData.incorrectAnswers,\n                timePractice: timePractice,\n                averageScore: averageScore\n              });\n            }\n\n            for (const theme in themeProgress) {\n              this.estadisticas.themeProgress.push({\n                theme: theme,\n                correctAnswers: themeProgress[theme].correctAnswers,\n                incorrectAnswers: themeProgress[theme].incorrectAnswers\n              });\n            } //hacer que aparezcan todas las sesiones\n\n\n            this.allSessions = this.estadisticas.sessionHistory;\n            this.filteredSessions = this.allSessions;\n            this.compareSessionAverages();\n          },\n          error: error => {\n            console.error('Error al obtener estadísticas:', error);\n          }\n        });\n      } else {\n        console.error('UserID es nulo.');\n      }\n    }\n\n    convertTime(totalSeconds) {\n      const hours = Math.floor(totalSeconds / 3600);\n      const minutes = Math.floor(totalSeconds % 3600 / 60);\n      const seconds = totalSeconds % 60;\n      return `${hours}h ${minutes}m ${seconds}s`;\n    }\n\n    filterSessions() {\n      const searchTermLower = this.searchTerm.toLowerCase(); // Convertir el término a minúsculas para una búsqueda sin distinción entre mayúsculas y minúsculas.\n\n      if (!searchTermLower) {\n        this.filteredSessions = this.allSessions; // Si el término de búsqueda está vacío, mostrar todas las sesiones.\n\n        return;\n      }\n\n      this.filteredSessions = this.allSessions.filter(session => {\n        // Filtrar por fecha u otros criterios que desees.\n        const formattedDate = session.date.toLowerCase();\n        return formattedDate.includes(searchTermLower);\n      });\n    } // Calcular el promedio de puntaje a lo largo del tiempo\n\n\n    calculateAverageScoreOverTime() {\n      const totalSessions = this.allSessions.length;\n      const totalScore = this.allSessions.reduce((acc, session) => acc + session.averageScore, 0);\n      return totalScore / totalSessions;\n    } // Calcular temas con mayor rendimiento por orden\n\n\n    calculateThemePerformance() {\n      const themePerformance = []; // Calcular el porcentaje de respuestas correctas por tema y acumularlos\n\n      let totalPercentage = 0;\n\n      for (const theme of this.estadisticas.themeProgress) {\n        const totalQuestions = theme.correctAnswers + theme.incorrectAnswers;\n        const percentage = theme.correctAnswers / totalQuestions * 100;\n        themePerformance.push({\n          theme: theme.theme,\n          percentage\n        });\n        totalPercentage += percentage;\n      } // Calcular el promedio de los porcentajes\n\n\n      const averagePercentage = themePerformance.length > 0 ? totalPercentage / themePerformance.length : 0; // Ordenar los temas por porcentaje (opcional)\n\n      themePerformance.sort((a, b) => b.percentage - a.percentage); // Agregar una entrada especial para el promedio\n\n      themePerformance.push({\n        theme: 'Promedio',\n        percentage: averagePercentage\n      });\n      return themePerformance;\n    }\n\n    compareSessionAverages() {\n      if (this.allSessions.length < 2) {\n        // No hay suficientes sesiones para realizar la comparación.\n        this.showScoreIncreaseResults = false;\n        return;\n      }\n\n      const firstSession = this.allSessions[0];\n      const lastSession = this.allSessions[this.allSessions.length - 1];\n      const firstAverage = firstSession.averageScore;\n      const lastAverage = lastSession.averageScore;\n      console.log(firstAverage, lastAverage);\n      const percentageIncrease = (lastAverage - firstAverage) / firstAverage * 100;\n\n      if (percentageIncrease >= 10) {\n        this.scoreIncreaseResults.push({\n          firstSession,\n          lastSession,\n          percentageIncrease\n        });\n      } // Mostrar la sección solo si hay resultados para mostrar\n\n\n      this.showScoreIncreaseResults = this.scoreIncreaseResults.length > 0;\n    }\n\n  }\n\n  EstadisticasComponent.ɵfac = function EstadisticasComponent_Factory(t) {\n    return new (t || EstadisticasComponent)(i0.ɵɵdirectiveInject(i1.EstadisticasService), i0.ɵɵdirectiveInject(i2.AppComponent));\n  };\n\n  EstadisticasComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EstadisticasComponent,\n    selectors: [[\"app-estadisticas\"]],\n    decls: 13,\n    vars: 5,\n    consts: [[1, \"card\"], [1, \"card-image\"], [\"src\", \"assets/Imagenes/estadisticas.jpg\", \"alt\", \"Imagen de pr\\u00F3ximamente\"], [\"class\", \"card-content\", 4, \"ngIf\"], [1, \"card-content\"], [\"type\", \"text\", \"placeholder\", \"Aqu\\u00ED puedes buscar tus sesiones, por ejemplo: Sep 29, 2023\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"progress\"], [1, \"progress-bar\"], [1, \"progress-red\"]],\n    template: function EstadisticasComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 0);\n        i0.ɵɵtemplate(4, EstadisticasComponent_div_4_Template, 5, 2, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 0);\n        i0.ɵɵtemplate(6, EstadisticasComponent_div_6_Template, 4, 1, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 0);\n        i0.ɵɵtemplate(8, EstadisticasComponent_div_8_Template, 12, 7, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 0);\n        i0.ɵɵtemplate(10, EstadisticasComponent_div_10_Template, 5, 1, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 0);\n        i0.ɵɵtemplate(12, EstadisticasComponent_div_12_Template, 5, 2, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.estadisticas);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.estadisticas);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.estadisticas);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.estadisticas);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.estadisticas);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i3.DatePipe],\n    styles: [\".card[_ngcontent-%COMP%]{background-color:#fff;border-radius:10px;box-shadow:0 4px 8px #0000001a;margin:20px;padding:20px;transition:transform .2s,box-shadow .2s}.card[_ngcontent-%COMP%]:hover{transform:translateY(-5px);box-shadow:0 6px 12px #00000026}.card-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;height:auto;border-radius:8px;object-fit:cover}.card-content[_ngcontent-%COMP%]{text-align:center;margin-top:20px}.card-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{color:#333;font-size:24px;margin-bottom:10px}.card-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#000;font-size:18px;margin-bottom:10px}.card-content[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style:none;padding:0}.card-content[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{margin-bottom:20px;padding:10px;border:1px solid #ccc;border-radius:5px;background-color:#f9f9f9;transition:background-color .2s}.card-content[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{background-color:#dcebeb}.card-content[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{color:#000;font-size:30px;font-family:Arial,Helvetica,sans-serif;margin-top:20px;margin-bottom:20px}.chart-container[_ngcontent-%COMP%]{width:100%;height:400px}@media (max-width: 768px){.chart-container[_ngcontent-%COMP%]{height:300px}}.progress[_ngcontent-%COMP%]{height:20px;background-color:#f5f5f5;border-radius:5px;margin-top:10px;overflow:hidden;position:relative}.progress-bar[_ngcontent-%COMP%], .progress-red[_ngcontent-%COMP%]{height:100%;text-align:center;line-height:20px;color:#fff;position:absolute;border-radius:5px}.progress-bar[_ngcontent-%COMP%]{background-color:#4caf50;left:0;width:0;transition:width .5s}.progress-red[_ngcontent-%COMP%]{background-color:#fab133;right:0;width:0;transition:width .5s}input[type=text][_ngcontent-%COMP%]{width:100%;padding:10px;border:1px solid #1562dd;border-radius:3px;font-size:1rem;margin-bottom:10px}input[type=text][_ngcontent-%COMP%]:focus{border-color:#007bff;box-shadow:0 0 5px #007bff80;outline:none}\"]\n  });\n  return EstadisticasComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}