{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.backendUrl;\n    }\n\n    login(email, password) {\n      const user = {\n        email,\n        password\n      };\n      return this.http.post(`${this.baseUrl}ingreso`, user).pipe(tap(response => {\n        if (response.token) {\n          localStorage.setItem('token', response.token);\n        }\n      }));\n    }\n\n    logout() {\n      localStorage.removeItem('token');\n    }\n\n    isAuthenticated() {\n      return !!localStorage.getItem('token');\n    }\n\n    getToken() {\n      return localStorage.getItem('token');\n    }\n\n    getUserProfile() {\n      const token = this.getToken();\n\n      if (token) {\n        const headers = new HttpHeaders().set('Authorization', token);\n        return this.http.get(`${this.baseUrl}perfil`, {\n          headers\n        });\n      }\n\n      return null;\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}