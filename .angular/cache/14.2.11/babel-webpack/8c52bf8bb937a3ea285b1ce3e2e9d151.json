{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/preguntas.service\";\nimport * as i2 from \"src/app/services/estadisticas.service\";\nimport * as i3 from \"src/app/app.component\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction PruebasComponent_ng_container_18_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const theme_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", theme_r5.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(theme_r5.label);\n  }\n}\n\nfunction PruebasComponent_ng_container_18_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const difficulty_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", difficulty_r6.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(difficulty_r6.label);\n  }\n}\n\nfunction PruebasComponent_ng_container_18_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.errorMessage);\n  }\n}\n\nfunction PruebasComponent_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0, 7);\n    i0.ɵɵelementStart(1, \"h1\", 8);\n    i0.ɵɵtext(2, \"Bienvenido al Cuestionario\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 9);\n    i0.ɵɵtext(4, \"Selecciona un Tema:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"select\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function PruebasComponent_ng_container_18_Template_select_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.selectedTheme = $event);\n    });\n    i0.ɵɵtemplate(6, PruebasComponent_ng_container_18_option_6_Template, 2, 2, \"option\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"label\", 12);\n    i0.ɵɵtext(8, \"Dificultad:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"select\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function PruebasComponent_ng_container_18_Template_select_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.selectedDifficulty = $event);\n    });\n    i0.ɵɵtemplate(10, PruebasComponent_ng_container_18_option_10_Template, 2, 2, \"option\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function PruebasComponent_ng_container_18_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.startQuiz());\n    });\n    i0.ɵɵtext(12, \"Comenzar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"br\")(14, \"br\");\n    i0.ɵɵtemplate(15, PruebasComponent_ng_container_18_div_15_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedTheme);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.availableThemes);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedDifficulty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.difficultyOptions);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorMessage);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"selected\": a0\n  };\n};\n\nfunction PruebasComponent_ng_container_19_ul_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ul\", 32);\n    i0.ɵɵlistener(\"click\", function PruebasComponent_ng_container_19_ul_11_Template_ul_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const optionIndex_r18 = restoredCtx.index;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onOptionClick(optionIndex_r18));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const option_r17 = ctx.$implicit;\n    const optionIndex_r18 = ctx.index;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, optionIndex_r18 === ctx_r11.currentQuestion.userAnswer));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", optionIndex_r18 + 1, \". \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(option_r17);\n  }\n}\n\nfunction PruebasComponent_ng_container_19_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r12.resultMessage);\n  }\n}\n\nfunction PruebasComponent_ng_container_19_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function PruebasComponent_ng_container_19_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.checkAnswer());\n    });\n    i0.ɵɵtext(1, \"Comprobar Respuesta\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r13.checkButtonDisabled || ctx_r13.answerChecked);\n  }\n}\n\nfunction PruebasComponent_ng_container_19_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function PruebasComponent_ng_container_19_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.loadNextQuestion());\n    });\n    i0.ɵɵtext(1, \"Siguiente Pregunta\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PruebasComponent_ng_container_19_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Tiempo transcurrido: \", ctx_r15.timeElapsed, \" \");\n  }\n}\n\nfunction PruebasComponent_ng_container_19_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"h3\");\n    i0.ɵɵtext(2, \"Resultados:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Respuestas Correctas: \", ctx_r16.correctAnswers, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Respuestas Incorrectas: \", ctx_r16.totalQuestions - ctx_r16.correctAnswers, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Tiempo Transcurrido: \", ctx_r16.timeElapsed, \" segundos.\");\n  }\n}\n\nfunction PruebasComponent_ng_container_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 18)(2, \"span\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" / \");\n    i0.ɵɵelementStart(5, \"span\", 20);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 21)(8, \"h2\", 22);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 23);\n    i0.ɵɵtemplate(11, PruebasComponent_ng_container_19_ul_11_Template, 4, 5, \"ul\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 25);\n    i0.ɵɵtemplate(13, PruebasComponent_ng_container_19_p_13_Template, 2, 1, \"p\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 26);\n    i0.ɵɵtemplate(15, PruebasComponent_ng_container_19_button_15_Template, 2, 1, \"button\", 27);\n    i0.ɵɵtemplate(16, PruebasComponent_ng_container_19_button_16_Template, 2, 0, \"button\", 28);\n    i0.ɵɵtemplate(17, PruebasComponent_ng_container_19_div_17_Template, 2, 1, \"div\", 29);\n    i0.ɵɵelementStart(18, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function PruebasComponent_ng_container_19_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.cancelQuiz());\n    });\n    i0.ɵɵtext(19, \"Cancelar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(20, PruebasComponent_ng_container_19_div_20_Template, 9, 3, \"div\", 31);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.correctAnswers);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.totalQuestions);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.currentQuestion.questionText);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.currentQuestion.options);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showResult);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.quizFinished && !ctx_r1.answered);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showNextQuestionButton && !ctx_r1.quizFinished);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.quizFinished);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.quizFinished);\n  }\n}\n\nexport let PruebasComponent = /*#__PURE__*/(() => {\n  class PruebasComponent {\n    constructor(preguntasService, estadisticasService, appComponent) {\n      this.preguntasService = preguntasService;\n      this.estadisticasService = estadisticasService;\n      this.appComponent = appComponent;\n      this.questions = [];\n      this.currentQuestionIndex = 0;\n      this.currentQuestion = {\n        questionText: '',\n        options: [],\n        correctOption: -1,\n        tema: ''\n      };\n      this.correctAnswers = 0;\n      this.totalQuestions = 0;\n      this.showResult = false;\n      this.resultMessage = '';\n      this.answered = false;\n      this.showNextQuestionButton = false;\n      this.quizFinished = false;\n      this.errorMessage = '';\n      this.answerChecked = false;\n      this.checkButtonDisabled = true;\n      this.startTime = 0;\n      this.endTime = 0;\n      this.elapsedTime = 0;\n      this.showIntro = true;\n      this.timeElapsed = '';\n      this.selectedTheme = ''; // Tema seleccionado por el usuario\n\n      this.selectedQuestionCount = 10; // Cantidad de preguntas seleccionada por el usuario\n\n      this.availableThemes = [{\n        value: 'enteros',\n        label: 'Números Enteros'\n      }, {\n        value: 'fracciones',\n        label: 'Fracciones'\n      }, {\n        value: 'Operaciones con Decimales',\n        label: 'Decimales'\n      }, {\n        value: 'Potencias y Raíces',\n        label: 'Potencias y Raíces'\n      }, {\n        value: 'Jerarquía de Operaciones',\n        label: 'Jerarquía de Operaciones'\n      }, {\n        value: 'Problemas Aritméticos',\n        label: 'Problemas Aritméticos'\n      }, {\n        value: 'Polígonos, Áreas y Perímetros',\n        label: 'Polígonos, Áreas y Perímetros'\n      }, {\n        value: 'Geometría Analítica',\n        label: 'Geometría Analítica'\n      }, {\n        value: 'Ecuaciones lineales y cuadraticas',\n        label: 'Ecuaciones lineales y cuadraticas'\n      }, {\n        value: 'Inecuaciones',\n        label: 'Inecuaciones'\n      }, {\n        value: 'Productos notables y factorizacion',\n        label: 'Productos notables y factorizacion'\n      }, {\n        value: 'Problemas de ecuaciones con 1 incognita',\n        label: 'Problemas de ecuaciones con 1 incognita'\n      }, {\n        value: 'Operaciones con conjuntos',\n        label: 'Operaciones con conjuntos'\n      }, {\n        value: 'Derivacion',\n        label: 'Derivacion'\n      }, {\n        value: 'Integracion',\n        label: 'Integracion'\n      }];\n      this.selectedDifficulty = 'regular'; // Dificultad seleccionada por el usuario (valor por defecto: regular)\n\n      this.difficultyOptions = [{\n        value: 'facil',\n        label: 'Fácil'\n      }, {\n        value: 'regular',\n        label: 'Regular'\n      }, {\n        value: 'dificil',\n        label: 'Difícil'\n      }];\n      this.themeAnswers = {};\n      this.completedtimeProgress = [];\n      this.completedSessions = [];\n    }\n\n    ngOnInit() {\n      // Iniciar intervalo para actualizar el tiempo transcurrido\n      setInterval(() => {\n        this.updateTimeElapsed();\n      }, 1000); // Actualizar cada segundo\n    }\n\n    startQuiz() {\n      if (this.selectedTheme && this.selectedDifficulty) {\n        this.errorMessage = ''; // Limpiar el mensaje de error si todo es válido\n\n        this.showIntro = false;\n        this.loadQuestions();\n      } else {\n        this.errorMessage = 'Por favor, seleccione un tema y una dificultad antes de comenzar el cuestionario.';\n      }\n    }\n\n    updateTimeElapsed() {\n      if (this.quizFinished) {\n        this.timeElapsed = this.elapsedTime.toString(); // Convertir el tiempo total a cadena si el quiz ha terminado\n      } else {\n        const currentTime = Date.now();\n        const timeDifference = currentTime - this.startTime;\n        const hours = Math.floor(timeDifference / 3600000); // 1 hora = 3600000 milisegundos\n\n        const minutes = Math.floor(timeDifference % 3600000 / 60000); // 1 minuto = 60000 milisegundos\n\n        const seconds = Math.floor(timeDifference % 60000 / 1000); // 1 segundo = 1000 milisegundos\n\n        this.timeElapsed = hours + ':' + this.formatTwoDigits(minutes) + ':' + this.formatTwoDigits(seconds);\n      }\n    }\n\n    formatTwoDigits(value) {\n      return value < 10 ? '0' + value : value.toString();\n    }\n\n    loadQuestions() {\n      this.startTime = Date.now();\n      this.preguntasService.obtenerPreguntas().subscribe({\n        next: data => {\n          const allQuestions = data.map(pregunta => {\n            return {\n              questionText: pregunta.enunciado,\n              options: pregunta.opciones,\n              correctOption: pregunta.respuestaCorrecta,\n              userAnswer: -1,\n              tema: pregunta.Tema\n            };\n          });\n          const filteredQuestions = allQuestions.filter(pregunta => pregunta.tema === this.selectedTheme);\n          this.shuffleQuestions(filteredQuestions); // Tomar las primeras preguntas según la cantidad seleccionada por el usuario y la dificultad\n\n          let questionCount = 10; // Cantidad por defecto para la dificultad regular\n\n          if (this.selectedDifficulty === 'facil') {\n            questionCount = 5;\n          } else if (this.selectedDifficulty === 'dificil') {\n            questionCount = 15;\n          }\n\n          this.questions = filteredQuestions.slice(0, questionCount);\n          this.totalQuestions = this.questions.length;\n          this.currentQuestion = this.questions[this.currentQuestionIndex];\n        },\n        error: error => {\n          console.error('Error al obtener preguntas:', error);\n        }\n      });\n    }\n\n    shuffleQuestions(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n    }\n\n    onOptionClick(optionIndex) {\n      if (!this.answered) {\n        this.currentQuestion.userAnswer = optionIndex;\n        this.checkButtonDisabled = false; // Habilitar el botón de comprobar respuesta\n      }\n    }\n\n    checkAnswer() {\n      if (!this.answerChecked) {\n        // Agregar esta condición\n        this.answerChecked = true; // Marcar la respuesta como comprobada\n\n        this.answered = true;\n\n        if (this.currentQuestion.userAnswer === this.currentQuestion.correctOption) {\n          this.correctAnswers++;\n          this.resultMessage = '¡Respuesta Correcta!'; // Incrementa las respuestas correctas para el tema actual\n\n          if (this.themeAnswers.hasOwnProperty(this.currentQuestion.tema)) {\n            this.themeAnswers[this.currentQuestion.tema].correctAnswers++;\n          } else {\n            this.themeAnswers[this.currentQuestion.tema] = {\n              correctAnswers: 1,\n              incorrectAnswers: 0\n            };\n          }\n        } else {\n          this.resultMessage = '¡Respuesta Incorrecta!'; // Incrementa las respuestas incorrectas para el tema actual\n\n          if (this.themeAnswers.hasOwnProperty(this.currentQuestion.tema)) {\n            this.themeAnswers[this.currentQuestion.tema].incorrectAnswers++;\n          } else {\n            this.themeAnswers[this.currentQuestion.tema] = {\n              correctAnswers: 0,\n              incorrectAnswers: 1\n            };\n          }\n        }\n\n        this.showResult = true;\n        this.showNextQuestionButton = true;\n      }\n    }\n\n    loadNextQuestion() {\n      this.showResult = false; // Ocultar el resultado de la pregunta anterior\n\n      this.showNextQuestionButton = false; // Ocultar el botón de siguiente pregunta\n\n      this.answered = false; // Reiniciar el estado de respuesta\n\n      this.checkButtonDisabled = true;\n      this.answerChecked = false;\n      this.currentQuestionIndex++;\n\n      if (this.currentQuestionIndex < this.totalQuestions) {\n        this.currentQuestion = this.questions[this.currentQuestionIndex];\n      } else {\n        // Quiz finished\n        this.currentQuestion = {\n          questionText: 'Prueba Terminada',\n          options: [],\n          correctOption: -1,\n          tema: ''\n        };\n        this.quizFinished = true; // Calcular tiempo transcurrido en segundos\n\n        this.endTime = Date.now();\n        this.elapsedTime = Math.floor((this.endTime - this.startTime) / 1000); // En segundos\n\n        this.sendSessionHistory();\n      }\n    }\n\n    viewResults() {\n      this.showResult = false;\n      this.showNextQuestionButton = false;\n    }\n\n    sendSessionHistory() {\n      const userId = this.appComponent.getUserID();\n      const themeProgress = []; // Recorre el objeto themeAnswers y crea objetos para themeProgress\n\n      for (const theme in this.themeAnswers) {\n        if (this.themeAnswers.hasOwnProperty(theme)) {\n          themeProgress.push({\n            theme: theme,\n            correctAnswers: this.themeAnswers[theme].correctAnswers,\n            incorrectAnswers: this.themeAnswers[theme].incorrectAnswers\n          });\n        }\n      }\n\n      if (userId !== null) {\n        const newSession = {\n          date: new Date(),\n          totalQuestions: this.totalQuestions,\n          correctAnswers: this.correctAnswers,\n          incorrectAnswers: this.totalQuestions - this.correctAnswers,\n          timePractice: this.elapsedTime,\n          averageScore: this.correctAnswers / this.totalQuestions * 100\n        };\n        const newTimeProgress = {\n          intervalStart: this.startTime,\n          intervalEnd: this.endTime,\n          correctAnswers: this.correctAnswers,\n          totalQuestions: this.totalQuestions\n        };\n        this.completedSessions.push(newSession);\n        this.completedtimeProgress.push(newTimeProgress);\n        const sessionData = {\n          userId: userId,\n          sessionHistory: this.completedSessions,\n          timeProgress: this.completedtimeProgress,\n          achievements: [],\n          themeProgress: themeProgress // Puedes llenar esta parte según tus necesidades\n\n        };\n        this.estadisticasService.guardarSesionHistorial(userId, sessionData).subscribe({\n          next: response => {\n            console.log('Sesión de práctica registrada:', response);\n          },\n          error: error => {\n            console.error('Error al guardar la sesión de práctica:', error);\n          }\n        });\n      } else {\n        console.error('El userId es nulo.');\n      }\n    }\n\n    resetQuiz() {\n      this.selectedTheme = '';\n      this.selectedQuestionCount = 10;\n      this.showIntro = true;\n      this.questions = [];\n      this.currentQuestionIndex = 0;\n      this.currentQuestion = {\n        questionText: '',\n        options: [],\n        correctOption: -1,\n        tema: ''\n      };\n      this.correctAnswers = 0;\n      this.totalQuestions = 0;\n      this.showResult = false;\n      this.resultMessage = '';\n      this.answered = false;\n      this.showNextQuestionButton = false;\n      this.quizFinished = false;\n      this.answerChecked = false;\n      this.checkButtonDisabled = true;\n      this.startTime = 0;\n      this.endTime = 0;\n      this.elapsedTime = 0;\n      this.timeElapsed = '';\n    }\n\n    cancelQuiz() {\n      this.resetQuiz(); // Restablecer las propiedades del cuestionario\n\n      this.showIntro = true; // Mostrar la pantalla de introducción\n    }\n\n  }\n\n  PruebasComponent.ɵfac = function PruebasComponent_Factory(t) {\n    return new (t || PruebasComponent)(i0.ɵɵdirectiveInject(i1.PreguntasService), i0.ɵɵdirectiveInject(i2.EstadisticasService), i0.ɵɵdirectiveInject(i3.AppComponent));\n  };\n\n  PruebasComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PruebasComponent,\n    selectors: [[\"app-pruebas\"]],\n    decls: 25,\n    vars: 2,\n    consts: [[1, \"card\"], [1, \"card-image\"], [\"src\", \"assets/Imagenes/prueba.jpg\", \"alt\", \"Imagen de pr\\u00F3ximamente\"], [1, \"card-content\"], [1, \"quiz-container\"], [\"class\", \"container\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"container\"], [1, \"quiz-title\"], [\"for\", \"themeSelect\"], [\"id\", \"themeSelect\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"difficultySelect\"], [\"id\", \"difficultySelect\", 3, \"ngModel\", \"ngModelChange\"], [1, \"boton-comenzar\", 3, \"click\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [3, \"value\"], [1, \"alert\", \"alert-danger\"], [1, \"quiz-score\"], [\"id\", \"correct-score\"], [\"id\", \"total-question\"], [1, \"quiz-body\"], [1, \"quiz-question\"], [1, \"quiz-options\"], [3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"result\"], [1, \"quiz-foot\"], [3, \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"time-elapsed\", 4, \"ngIf\"], [1, \"boton-cancelar\", 3, \"click\"], [\"class\", \"quiz-results\", 4, \"ngIf\"], [3, \"ngClass\", \"click\"], [3, \"disabled\", \"click\"], [\"type\", \"button\", 3, \"click\"], [1, \"time-elapsed\"], [1, \"quiz-results\"]],\n    template: function PruebasComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"h2\");\n        i0.ɵɵtext(5, \"Instrucciones\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵtext(7, \" - Primero, debes seleccionar un tema que desees practicar.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9, \" - Segundo, debes seleccionar la dificultad para el cuestionario.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\");\n        i0.ɵɵtext(11, \" - Tercero, al precionar el bot\\u00F3n \\\"Comenzar\\\" el cuestionario dar\\u00E1 inicio a las preguntas y el conteo de tiempo.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"p\");\n        i0.ɵɵtext(13, \" - Cuarto, al finalizar el cuestionario podr\\u00E1s visualizar tus resultados y tiempo total.\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(14, \"br\")(15, \"br\")(16, \"br\");\n        i0.ɵɵelementStart(17, \"div\", 4);\n        i0.ɵɵtemplate(18, PruebasComponent_ng_container_18_Template, 16, 5, \"ng-container\", 5);\n        i0.ɵɵtemplate(19, PruebasComponent_ng_container_19_Template, 21, 9, \"ng-container\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"br\")(21, \"br\")(22, \"br\")(23, \"br\")(24, \"br\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngIf\", ctx.showIntro);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showIntro);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel],\n    styles: [\"@import\\\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800;900&display=swap\\\";.quiz-container[_ngcontent-%COMP%]{background-color:#fff;padding:1.5rem 4rem 3rem;width:100%;height:100%;border-radius:1.5rem;position:relative;box-shadow:0 4px 6px #0000001a,0 1px 3px #0000001a}.quiz-score[_ngcontent-%COMP%]{text-align:right;font-size:1.5rem;border:5px solid var(--grey-color);font-weight:700;width:100px;height:50px;margin:.5rem auto 1rem;color:var(--light-purple-color)}.quiz-question[_ngcontent-%COMP%]{font-size:2rem;text-align:center;line-height:1.3;margin-bottom:2rem}.quiz-options[_ngcontent-%COMP%]{color:#fff;font-size:1.7rem;list-style-type:none;margin:1rem 0}.quiz-options[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{border-radius:.5rem;font-weight:600;margin:.7rem 0;padding:.4rem 1.2rem;cursor:pointer;-webkit-text-decoration:#ffffff;text-decoration:#ffffff;border:3px solid var(--light-purple-color);background-color:#b790e0;color:var(--light-color);box-shadow:0 4px #6c4298;transition:var(--transition)}.quiz-options[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]:hover{background-color:#e4e4e4;color:#000;border-color:var(--grey-color);box-shadow:0 4px #bbb}.quiz-options[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]:active{transform:scale(.97)}.quiz-options[_ngcontent-%COMP%]   ul.selected[_ngcontent-%COMP%]{background-color:#e4e4e4;color:#000;border-color:var(--light-purple-color)!important;box-shadow:0 4px #bbb}.quiz-foot[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{border:none;border-radius:.5rem;outline:0;font-family:Poppins,sans-serif;font-size:1.2rem;font-weight:600;padding:.5rem 1rem;margin:0 auto;text-transform:uppercase;cursor:pointer;display:block;background-color:var(--grey-color);color:var(--dark-color);letter-spacing:2px;transition:var(--transition);box-shadow:0 4px #bbb}.quiz-foot[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#e6e6e6;box-shadow:0 4px #a7a7a7}.quiz-foot[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active{transform:scale(.95)}#result[_ngcontent-%COMP%]{padding:.7rem 0;text-align:center;font-weight:600;font-size:1.3rem}#result[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{width:30px;height:30px;border-radius:50%;line-height:30px;margin-right:.5rem;margin-bottom:.5rem;background-color:var(--light-purple-color);color:var(--light-color)}@media (max-width: 678px){.quiz-container[_ngcontent-%COMP%]{margin:3rem 0;width:90%;height:90%;padding:1.5rem 1rem 3rem;border-top-left-radius:0;border-bottom-right-radius:0}.quiz-foot[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{font-size:1rem}}.container[_ngcontent-%COMP%]{text-align:center;padding:40px;background-color:#f9f9f9;border:1px solid #ccc;border-radius:10px;box-shadow:0 0 10px #0000001a;margin:0 auto;max-width:500px}.quiz-title[_ngcontent-%COMP%]{text-align:center;font-size:2rem;margin-bottom:20px;color:#333}label[_ngcontent-%COMP%]{font-weight:700;display:block;margin-bottom:8px;color:#555}select[_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%]{margin-bottom:15px;padding:10px;width:100%;border:1px solid #ccc;border-radius:5px;background-color:#f7f7f7;font-size:16px;color:#444}select[_ngcontent-%COMP%]{appearance:none;-webkit-appearance:none;background-size:20px 20px;padding-right:40px}button[_ngcontent-%COMP%]{background-color:#2989ca;color:#fff;border:none;padding:12px 25px;font-size:18px;border-radius:5px;cursor:pointer;transition:background-color .3s ease}button[_ngcontent-%COMP%]:hover{background-color:#e36fc6}.card[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;background-color:#fff;border-radius:10px;box-shadow:0 4px 8px #0000001a;width:auto;margin:auto}.card-image[_ngcontent-%COMP%]{height:auto;overflow:hidden;border-radius:8px}.card-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;height:auto;object-fit:cover}.card-content[_ngcontent-%COMP%]{flex:1;padding:40px}.card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{color:#333;font-size:36px;margin:0 0 20px;text-align:center}.card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#666;font-size:20px;margin:10px 0;text-align:left}.error-message[_ngcontent-%COMP%]{color:red;font-weight:700}.time-elapsed[_ngcontent-%COMP%]{font-size:20px}\"]\n  });\n  return PruebasComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}