{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/perfil.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/platform-browser\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction VideoCrudComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const module_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", module_r4._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(module_r4.nombre);\n  }\n}\n\nfunction VideoCrudComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const submodule_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", submodule_r5._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(submodule_r5.nombre);\n  }\n}\n\nfunction VideoCrudComponent_li_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"div\", 23)(3, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function VideoCrudComponent_li_37_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const video_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.editVideo(video_r6));\n    });\n    i0.ɵɵtext(4, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function VideoCrudComponent_li_37_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const video_r6 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.confirmDeleteVideo(video_r6._id));\n    });\n    i0.ɵɵtext(6, \"Eliminar\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const video_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", video_r6.title, \" \");\n  }\n}\n\nfunction VideoCrudComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"div\", 26)(2, \"p\");\n    i0.ɵɵtext(3, \"\\u00BFEst\\u00E1s seguro de que deseas eliminar este Video?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 16)(5, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function VideoCrudComponent_div_38_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.cancelDeleteVideo());\n    });\n    i0.ɵɵtext(6, \"Cancelar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function VideoCrudComponent_div_38_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.deleteVideo(ctx_r12.videoToDeleteId));\n    });\n    i0.ɵɵtext(8, \"Eliminar\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\n\nexport let VideoCrudComponent = /*#__PURE__*/(() => {\n  class VideoCrudComponent {\n    constructor(perfilService, route, router, sanitizer) {\n      this.perfilService = perfilService;\n      this.route = route;\n      this.router = router;\n      this.sanitizer = sanitizer;\n      this.moduleId = '';\n      this.submoduleId = '';\n      this.videos = [];\n      this.selectedVideoId = null;\n      this.videoData = {\n        title: '',\n        description: '',\n        url: '',\n        moduleId: '',\n        submoduleDataId: '' // Agregar submoduleDataId para seleccionar el submódulo\n\n      };\n      this.confirmationVisible = false;\n      this.videoToDeleteId = '';\n      this.modules = [];\n      this.submodules = [];\n      this.isEditMode = false;\n      this.searchTerm = '';\n      this.filteredVideos = [];\n    }\n\n    ngOnInit() {\n      this.loadModules();\n      this.confirmationVisible = false;\n    }\n\n    loadModules() {\n      this.perfilService.getModules().subscribe({\n        next: modules => {\n          this.modules = modules;\n        },\n        error: error => {\n          console.log('Error al obtener la lista de módulos:', error);\n        }\n      });\n    }\n\n    loadSubmodules() {\n      if (!this.videoData.moduleId) {\n        return;\n      }\n\n      this.perfilService.getSubmodules(this.videoData.moduleId).subscribe({\n        next: submodules => {\n          this.submodules = submodules;\n          this.videoData.submoduleDataId = ''; // Reinicia el submódulo seleccionado al cambiar de módulo\n\n          this.loadVideos();\n        },\n        error: error => {\n          console.log('Error al obtener la lista de submódulos:', error);\n        }\n      });\n    }\n\n    loadVideos() {\n      if (!this.videoData.submoduleDataId) {\n        return;\n      }\n\n      this.perfilService.getVideos(this.videoData.submoduleDataId).subscribe({\n        next: videos => {\n          this.videos = videos;\n          this.filteredVideos = videos; // Inicialmente, muestra todos los videos\n        },\n        error: error => {\n          console.log('Error al obtener la lista de videos:', error);\n        }\n      });\n    } // Función para sanitizar la URL\n\n\n    getSafeUrl(url) {\n      return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n    } // Modificar createVideo para cargar la lista de videos después de crear uno\n\n\n    createVideo() {\n      // Verifica que se haya seleccionado un módulo y un submódulo antes de crear el video\n      if (!this.videoData.moduleId || !this.videoData.submoduleDataId) {\n        console.log('Por favor, selecciona un módulo y un submódulo antes de crear un video.');\n        return;\n      }\n\n      this.perfilService.createVideo(this.videoData.submoduleDataId, this.videoData).subscribe({\n        next: createdVideo => {\n          // Lógica para manejar la respuesta del servicio\n          this.resetForm(); // Luego de crear un video, carga la lista de videos nuevamente\n\n          this.loadVideos();\n        },\n        error: error => {\n          console.log('Error al crear el video:', error);\n        }\n      });\n    }\n\n    updateVideo() {\n      // Lógica para actualizar un video existente utilizando perfilService.updateVideo()\n      if (this.selectedVideoId) {\n        this.perfilService.updateVideo(this.selectedVideoId, this.videoData).subscribe({\n          next: updatedVideo => {\n            const index = this.videos.findIndex(video => video._id === this.selectedVideoId);\n\n            if (index !== -1) {\n              this.videos[index] = updatedVideo;\n              this.resetForm();\n            }\n          },\n          error: error => {\n            console.log('Error al actualizar el video:', error);\n          }\n        });\n      }\n    }\n\n    editVideo(video) {\n      // Lógica para editar un video\n      this.selectedVideoId = video._id;\n      this.videoData = { ...video\n      };\n      this.isEditMode = true;\n    }\n\n    confirmDeleteVideo(videoId) {\n      // Lógica para mostrar el mensaje modal de confirmación para eliminar un video\n      this.confirmationVisible = true;\n      this.videoToDeleteId = videoId;\n    }\n\n    cancelDeleteVideo() {\n      // Lógica para cancelar la eliminación de un video y ocultar el mensaje modal\n      this.confirmationVisible = false;\n      this.videoToDeleteId = '';\n    }\n\n    deleteVideo(videoId) {\n      this.perfilService.deleteVideo(videoId).subscribe({\n        next: () => {\n          // Elimina el video de la lista de videos filtrados\n          this.filteredVideos = this.filteredVideos.filter(video => video._id !== videoId); // También elimina el video de la lista original de videos\n\n          const videoIndex = this.videos.findIndex(video => video._id === videoId);\n\n          if (videoIndex !== -1) {\n            this.videos.splice(videoIndex, 1);\n          }\n\n          this.confirmationVisible = false;\n        },\n        error: error => {\n          console.log('Error al eliminar el video:', error);\n        }\n      });\n    }\n\n    areFieldsValid() {\n      // Realiza las validaciones necesarias aquí\n      const titleValid = !!this.videoData.title;\n      const descriptionValid = !!this.videoData.description;\n      const urlValid = !!this.videoData.url; // Aplicar clases de error si los campos están vacíos\n\n      if (!titleValid) {\n        this.addErrorClassToField('title');\n      } else {\n        this.removeErrorClassFromField('title');\n      }\n\n      if (!descriptionValid) {\n        this.addErrorClassToField('description');\n      } else {\n        this.removeErrorClassFromField('description');\n      }\n\n      if (!urlValid) {\n        this.addErrorClassToField('url');\n      } else {\n        this.removeErrorClassFromField('url');\n      }\n\n      return titleValid && descriptionValid && urlValid;\n    } // Función para agregar una clase de error a un campo\n\n\n    addErrorClassToField(fieldName) {\n      const fieldElement = document.getElementById(fieldName);\n\n      if (fieldElement) {\n        fieldElement.classList.add('error');\n      }\n    } // Función para quitar una clase de error de un campo\n\n\n    removeErrorClassFromField(fieldName) {\n      const fieldElement = document.getElementById(fieldName);\n\n      if (fieldElement) {\n        fieldElement.classList.remove('error');\n      }\n    } // Agrega este método para filtrar los videos según el término de búsqueda\n\n\n    filterVideos() {\n      if (!this.searchTerm) {\n        // Si el término de búsqueda está vacío, muestra todos los videos del submódulo seleccionado\n        this.filteredVideos = this.videos;\n      } else {\n        // Filtra los videos por el término de búsqueda\n        this.filteredVideos = this.videos.filter(video => video.title.toLowerCase().includes(this.searchTerm.toLowerCase()));\n      }\n    }\n\n    resetForm() {\n      this.videoData = {\n        title: '',\n        description: '',\n        url: '',\n        moduleId: '',\n        submoduleDataId: '' // Restablece el ID del submódulo seleccionado\n\n      };\n      this.isEditMode = false;\n      this.selectedVideoId = null;\n    }\n\n  }\n\n  VideoCrudComponent.ɵfac = function VideoCrudComponent_Factory(t) {\n    return new (t || VideoCrudComponent)(i0.ɵɵdirectiveInject(i1.PerfilService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n  };\n\n  VideoCrudComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VideoCrudComponent,\n    selectors: [[\"app-video-crud\"]],\n    decls: 39,\n    vars: 13,\n    consts: [[1, \"video-crud-container\"], [1, \"video-form\"], [1, \"module-selector\"], [\"id\", \"moduleSelector\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"submodule-selector\"], [\"id\", \"submoduleSelector\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"description\", \"name\", \"description\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"url\"], [\"type\", \"text\", \"id\", \"url\", \"name\", \"url\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [2, \"text-align\", \"right\"], [\"type\", \"submit\", 1, \"boton\", 3, \"disabled\"], [1, \"module-list\"], [\"type\", \"text\", \"placeholder\", \"Buscar videos\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"modal\", 4, \"ngIf\"], [3, \"value\"], [1, \"buttons-container\", 2, \"text-align\", \"right\"], [1, \"boton\", 3, \"click\"], [1, \"modal\"], [1, \"modal-content\"]],\n    template: function VideoCrudComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function VideoCrudComponent_Template_select_ngModelChange_5_listener($event) {\n          return ctx.videoData.moduleId = $event;\n        })(\"change\", function VideoCrudComponent_Template_select_change_5_listener() {\n          return ctx.loadSubmodules();\n        });\n        i0.ɵɵelementStart(6, \"option\", 4);\n        i0.ɵɵtext(7, \"Clic aqu\\u00ED para seleccionar un m\\u00F3dulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, VideoCrudComponent_option_8_Template, 2, 2, \"option\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"div\", 6)(11, \"select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function VideoCrudComponent_Template_select_ngModelChange_11_listener($event) {\n          return ctx.videoData.submoduleDataId = $event;\n        })(\"change\", function VideoCrudComponent_Template_select_change_11_listener() {\n          return ctx.loadVideos();\n        });\n        i0.ɵɵelementStart(12, \"option\", 4);\n        i0.ɵɵtext(13, \"Clic aqu\\u00ED para seleccionar un tema\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, VideoCrudComponent_option_14_Template, 2, 2, \"option\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"form\", 8);\n        i0.ɵɵlistener(\"ngSubmit\", function VideoCrudComponent_Template_form_ngSubmit_16_listener() {\n          return ctx.isEditMode ? ctx.updateVideo() : ctx.createVideo();\n        });\n        i0.ɵɵelementStart(17, \"div\", 9)(18, \"label\", 10);\n        i0.ɵɵtext(19, \"T\\u00EDtulo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function VideoCrudComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.videoData.title = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 9)(22, \"label\", 12);\n        i0.ɵɵtext(23, \"Descripci\\u00F3n:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"textarea\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function VideoCrudComponent_Template_textarea_ngModelChange_24_listener($event) {\n          return ctx.videoData.description = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"div\", 9)(26, \"label\", 14);\n        i0.ɵɵtext(27, \"URL del Video (Ejemplo: https://www.youtube.com/embed/EHLsl2jVt-U):\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function VideoCrudComponent_Template_input_ngModelChange_28_listener($event) {\n          return ctx.videoData.url = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 16)(30, \"button\", 17);\n        i0.ɵɵtext(31);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(32, \"div\", 18)(33, \"h2\");\n        i0.ɵɵtext(34, \"Lista de Videos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"input\", 19);\n        i0.ɵɵlistener(\"ngModelChange\", function VideoCrudComponent_Template_input_ngModelChange_35_listener($event) {\n          return ctx.searchTerm = $event;\n        })(\"input\", function VideoCrudComponent_Template_input_input_35_listener() {\n          return ctx.filterVideos();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"ul\");\n        i0.ɵɵtemplate(37, VideoCrudComponent_li_37_Template, 7, 1, \"li\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(38, VideoCrudComponent_div_38_Template, 9, 0, \"div\", 21);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Editar Video\" : \"Crear Video\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.videoData.moduleId);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.modules);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.videoData.submoduleDataId);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.submodules);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.videoData.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.videoData.description);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.videoData.url);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.areFieldsValid());\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Actualizar\" : \"Crear\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchTerm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredVideos);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.confirmationVisible);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n    styles: [\".video-crud-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:flex-start;padding:20px}.video-form[_ngcontent-%COMP%]{flex:1;background-color:#f8f8f8;border:1px solid #ccc;padding:20px;border-radius:5px;box-shadow:0 0 5px #0003}.video-form[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.5rem;margin-bottom:20px}.form-group[_ngcontent-%COMP%]{margin-bottom:15px}.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;font-weight:700;margin-bottom:5px}.form-group[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;padding:10px;border:1px solid #ccc;border-radius:3px;font-size:1rem}.boton[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:12px 20px;border:none;border-radius:3px;font-size:1rem;text-transform:uppercase;transition:background-color .3s ease}.boton[_ngcontent-%COMP%]:disabled{background-color:#ccc;cursor:not-allowed}.boton[_ngcontent-%COMP%]:hover:not([disabled]){background-color:#0056b3;transform:translateY(-2px)}.modal[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;background-color:#00000080;display:flex;justify-content:center;align-items:center;z-index:999}.modal-content[_ngcontent-%COMP%]{background-color:#fff;padding:20px;border-radius:5px;text-align:center;width:50%;box-shadow:0 0 10px #0000004d}.modal-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1rem;margin-bottom:20px}.modal-content[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#1a05a2;color:#fff;padding:10px 20px;border:none;border-radius:3px;font-size:1rem;cursor:pointer;margin-right:10px}.modal-content[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child{background-color:#c31526;margin-top:10px}.modal-content[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#007bff}.modal-content[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child:hover{background-color:red}.custom-select[_ngcontent-%COMP%]{position:relative;display:inline-block;width:100%}select[_ngcontent-%COMP%]{width:100%;padding:10px;border:1px solid #ccc;border-radius:5px;background-color:#fff;font-size:16px;-webkit-appearance:none;appearance:none}.select-icon[_ngcontent-%COMP%]{position:absolute;top:50%;right:10px;transform:translateY(-50%);pointer-events:none}.select-icon[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:14px;color:#555}.module-list[_ngcontent-%COMP%]{flex:1;margin-left:20px}.module-list[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.5rem;margin-bottom:20px}.module-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style:none;padding:0}.module-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;border:1px solid #ccc;padding:10px;margin-bottom:10px;background-color:#fff;border-radius:5px;box-shadow:0 0 5px #0000001a}.module-list[_ngcontent-%COMP%]   .buttons-container[_ngcontent-%COMP%]{display:flex;gap:10px}.module-list[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#2a9bb7;color:#fff;padding:5px 10px;border:none;border-radius:3px;font-size:.9rem;cursor:pointer}.module-list[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#280aac}.module-list[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]{width:100%;padding:10px;border:1px solid #ccc;border-radius:3px;font-size:1rem;margin-bottom:10px}.module-list[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]:focus{border-color:#007bff;box-shadow:0 0 5px #007bff80;outline:none}.error[_ngcontent-%COMP%]{border:2px solid #ff0000}\"]\n  });\n  return VideoCrudComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}